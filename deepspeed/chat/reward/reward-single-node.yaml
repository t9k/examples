apiVersion: batch.tensorstack.dev/v1beta1
kind: DeepSpeedJob
metadata:
  name: reward-single-node
spec:
  config:
    slotsPerWorker: 4
    run:
      python: [
        "./chat/reward/main.py",
        "--data_path", "./datasets/Dahoas/rm-static", "./datasets/Dahoas/full-hh-rlhf", "./datasets/Dahoas/synthetic-instruct-gptj-pairwise",
        "--data_split", "2,4,4",
        "--model_name_or_path", "./models/opt-350m",
        "--num_padding_at_beginning", "1",
        "--per_device_train_batch_size", "8",
        "--per_device_eval_batch_size", "8",
        "--max_seq_len", "512",
        "--learning_rate", "5e-5",
        "--weight_decay", "0.1",
        "--num_train_epochs", "1",
        "--gradient_accumulation_steps", "1",
        "--lr_scheduler_type", "cosine",
        "--num_warmup_steps", "0",
        "--seed", "1234",
        "--zero_stage", "0",
        "--deepspeed",
        "--output_dir=./output/single-node/reward-models/350m"
      ]
  worker:
    replicas: 1
    template:
      spec:
        containers:
          - name: worker
            workingDir: /t9k/mnt/
            image: tsz.io/t9k/deepspeed:chat-0.10.0
            securityContext:
              capabilities:
                add: [ "IPC_LOCK" ]
            resources:
              requests:
                cpu: 8
                memory: 128Gi
                nvidia.com/gpu: 4
              limits:
                cpu: 16
                memory: 256Gi
                nvidia.com/gpu: 4
            volumeMounts:
              - mountPath: /t9k/mnt
                name: data
              - mountPath: /dev/shm
                name: dshm
        volumes:
          - name: data
            persistentVolumeClaim:
              claimName: chat
          - name: dshm
            emptyDir:
              medium: Memory
